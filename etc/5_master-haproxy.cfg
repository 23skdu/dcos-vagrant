#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
   # to have these messages end up in /var/log/haproxy.log you will
   # need to:
   #
   # 1) configure syslog to accept network log events.  This is done
   #    by adding the '-r' option to the SYSLOGD_OPTIONS in
   #    /etc/sysconfig/syslog
   #
   # 2) configure local2 events to go to the /var/log/haproxy.log
   #   file. A line like the following can be added to
   #   /etc/sysconfig/syslog
   #
   #    local2.*                       /var/log/haproxy.log
   #
   log         127.0.0.1 local2

   chroot      /var/lib/haproxy
   pidfile     /var/run/haproxy.pid
   maxconn     4000
   user        haproxy
   group       haproxy
   daemon

   # turn on stats unix socket
   stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
   mode                    http
   log                     global
   option                  httplog
   option                  dontlognull
   option http-server-close
   option forwardfor       except 127.0.0.0/8
   option                  redispatch
   retries                 3
   timeout http-request    10s
   timeout queue           1m
   timeout connect         10s
   timeout client          1m
   timeout server          1m
   timeout http-keep-alive 10s
   timeout check           10s
   maxconn                 3000

frontend dcos_exhibitor_frontend
   bind *:8181
   default_backend dcos_exhibitor_backend

backend dcos_exhibitor_backend
   balance roundrobin
   server m1.dcos 192.168.65.90:8181 check
   server m2.dcos 192.168.65.91:8181 check
   server m3.dcos 192.168.65.92:8181 check
   server m4.dcos 192.168.65.93:8181 check
   server m5.dcos 192.168.65.94:8181 check

frontend dcos_zk_frontend
   bind *:2181
   default_backend dcos_zk_backend

backend dcos_zk_backend
   balance roundrobin
   server m1.dcos 192.168.65.90:2181 check
   server m2.dcos 192.168.65.91:2181 check
   server m3.dcos 192.168.65.92:2181 check
   server m4.dcos 192.168.65.93:2181 check
   server m5.dcos 192.168.65.94:2181 check

frontend dcos_http_frontend
   bind *:80
   default_backend dcos_http_backend

backend dcos_http_backend
   balance roundrobin
   server m1.dcos 192.168.65.90:80 check
   server m2.dcos 192.168.65.91:80 check
   server m3.dcos 192.168.65.92:80 check
   server m4.dcos 192.168.65.93:80 check
   server m5.dcos 192.168.65.94:80 check

frontend dcos_https_frontend
   bind *:443
   default_backend dcos_http_backend

backend dcos_https_backend
   balance roundrobin
   server m1.dcos 192.168.65.90:443 check
   server m2.dcos 192.168.65.91:443 check
   server m3.dcos 192.168.65.92:443 check
   server m4.dcos 192.168.65.93:443 check
   server m5.dcos 192.168.65.94:443 check

frontend dcos_marathon_frontend
   bind *:8080
   default_backend dcos_marathon_backend

backend dcos_marathon_backend
   balance roundrobin
   server m1.dcos 192.168.65.90:8080 check
   server m2.dcos 192.168.65.91:8080 check
   server m3.dcos 192.168.65.92:8080 check
   server m4.dcos 192.168.65.93:8080 check
   server m5.dcos 192.168.65.94:8080 check

frontend dcos_master_frontend
   bind *:5050
   default_backend dcos_master_backend

backend dcos_master_backend
   balance roundrobin
   server m1.dcos 192.168.65.90:5050 check
   server m2.dcos 192.168.65.91:5050 check
   server m3.dcos 192.168.65.92:5050 check
   server m4.dcos 192.168.65.93:5050 check
   server m5.dcos 192.168.65.94:5050 check
